// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package robot.subsystems;


import robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private WPI_TalonSRX leftFMtr;
private WPI_TalonSRX leftRMtr;
private WPI_TalonSRX leftTMtr;
private SpeedControllerGroup leftMtrGrp;
private WPI_TalonSRX rightRMtr;
private WPI_TalonSRX rightFMtr;
private WPI_TalonSRX rightTMtr;
private SpeedControllerGroup rightMtrGrp;
private DifferentialDrive differentialDrive;
private Compressor compressor;
private Solenoid gearShiftValve;
private DigitalInput climbRetractSwitch;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFMtr = new WPI_TalonSRX(6);


        
leftRMtr = new WPI_TalonSRX(5);


        
leftTMtr = new WPI_TalonSRX(7);


        
leftMtrGrp = new SpeedControllerGroup(leftRMtr, leftFMtr , leftTMtr );
addChild("leftMtrGrp",leftMtrGrp);

        
rightRMtr = new WPI_TalonSRX(1);


        
rightFMtr = new WPI_TalonSRX(2);


        
rightTMtr = new WPI_TalonSRX(10);


        
rightMtrGrp = new SpeedControllerGroup(rightFMtr, rightRMtr , rightTMtr );
addChild("rightMtrGrp",rightMtrGrp);

        
differentialDrive = new DifferentialDrive(leftMtrGrp, rightMtrGrp);
addChild("Differential Drive",differentialDrive);
differentialDrive.setSafetyEnabled(true);
differentialDrive.setExpiration(0.1);
differentialDrive.setMaxOutput(1.0);

        
compressor = new Compressor(0);
addChild("Compressor",compressor);

        
gearShiftValve = new Solenoid(0, 7);
addChild("gearShiftValve",gearShiftValve);

        
climbRetractSwitch = new DigitalInput(20);
addChild("ClimbRetractSwitch",climbRetractSwitch);

        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}


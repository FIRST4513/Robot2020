// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import robot.Robot;

/**
 *
 */
public class shooterAimByVisionCmd extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double targetX, targetY;

    private static final float TARGET_X_DEADBAND = 1;
    private static final float TARGET_Y_DEADBAND = 1;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public shooterAimByVisionCmd() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooterSubSys);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if (Robot.udpSubSys.foundVisionTarget() == false) {
            Robot.shooterSubSys.stopTurret();
            Robot.shooterSubSys.stopHood();
            return;
        }

        targetX = Robot.udpSubSys.getVisionTargetX();
        targetY = Robot.udpSubSys.getVisionTargetY();

        if (targetX >= Math.abs(TARGET_X_DEADBAND)) {
            if (targetX > 0) {
                if (targetX >= 20) { Robot.shooterSubSys.moveTurret(0.7); }
                else if (targetX >= 10) { Robot.shooterSubSys.moveTurret(0.5); }
                else if (targetX >= 5) { Robot.shooterSubSys.moveTurret(0.4); }
                else if (targetX >= 2.5) { Robot.shooterSubSys.moveTurret(0.3); }
            } else {
                if (targetX <= -20) { Robot.shooterSubSys.moveTurret(0.7); } 
                else if (targetX <= -10) { Robot.shooterSubSys.moveTurret(0.5); }
                else if (targetX <= -5) { Robot.shooterSubSys.moveTurret(0.4); }
                else if (targetX <= -2.5) { Robot.shooterSubSys.moveTurret(0.3); }
            }
        } else {
            Robot.shooterSubSys.stopTurret();
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.shooterSubSys.stopTurret();
        Robot.shooterSubSys.stopHood();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}

// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import robot.subsystems.*;

//import edu.wpi.first.wpilibj2.command.ParallelCommandGroup;
//import edu.wpi.first.wpilibj2.command.ParallelRaceGroup;
//import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
//import edu.wpi.first.wpilibj2.command.InstantCommand;
//import edu.wpi.first.wpilibj2.command.CommandBase;


//import edu.wpi.first.wpilibj2.command.InstantCommand;
//import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
//import edu.wpi.first.wpilibj2.command.StartEndCommand;

/**
 * A complex auto command that drives forward, releases a hatch, and then drives backward.
 */
//public class testCmdGrp extends SequentialCommandGroup {
  /**
   * Creates a new ComplexAutoCommand.
   */
//  public testCmdGrp() {
    // addCommands(
        
    //     // Drive forward up to the front of the cargo ship
    //     new StartEndCommand(
    //         // Start driving forward at the start of the command
    //         () -> ResetGyroCmd(),
    //         // Stop driving at the end of the command
    //         () -> autoTurretPos1CmdGrp()
    //     ),

    //     // Release the hatch
    //     new InstantCommand(ResetGyroCmd(), hatchSubsystem),

    //     // Drive backward the specified distance
    //     new StartEndCommand(
    //         () -> driveSubsystem.arcadeDrive(-AutoConstants.kAutoDriveSpeed, 0),
    //         () -> driveSubsystem.arcadeDrive(0, 0), driveSubsystem)
    //         .beforeStarting(driveSubsystem::resetEncoders)
    //         .withInterrupt(
    //             () -> driveSubsystem.getAverageEncoderDistance()
    //                 <= -AutoConstants.kAutoBackupDistanceInches));
//  }

//}
